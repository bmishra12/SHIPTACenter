@using System.Web.Mvc.Html
@using Umbraco.Web
@using ClientDependency.Core.Mvc


@using UmbracoShipTac.Controllers.SurfaceControllers
@using umbraco.cms.businesslogic.member
@model UmbracoShipTac.Models.RegisterViewModel
@{

    var success = TempData["FormSuccess"] != null;

    Html.RequiresJs("/umbraco_client/ui/jquery.js");
    Html.RequiresJs("/umbraco_client/Application/JQuery/jquery.validate.min.js");
    Html.RequiresJs("/umbraco_client/Application/JQuery/jquery.validate.unobtrusive.min.js");
    Html.EnableClientValidation(true);
    Html.EnableUnobtrusiveJavaScript(true);
}




    @using (Html.BeginUmbracoForm<AuthSurfaceController>("HandleRegister", null, new { @class = "form-horizontal" }))
    {
        @Html.AntiForgeryToken()

        @*@Html.ValidationSummary(false)*@

        <fieldset>

            <p>
               <strong class="pull-right">(<span class="text-danger">*</span> = required field)</strong>
            </p>



            @Html.ValidationSummary("RegisterViewModel", true)


            <div class="form-group">
                <label for="Role" class="col-sm-4 control-label"><span class="text-danger">*</span>Role</label>

                <div class="col-sm-8">
                    @Html.DropDownListFor(model => model.Role, UmbracoShipTac.Code.UiEnum.GetRegistrationRoles(), "Please select a Role", new { @class = "form-control" })

                </div>
            </div>


            <div class="form-group">
                <div class="col-sm-4 control-label">
                    <label for="FirstName"><span class="text-danger">*</span>First Name</label>
                    <label for="LastName">/Last Name</label>
                </div>
               
                <div class="col-sm-8">
                    <div class="form-inline row">
                        <div class="form-group col-sm-6">
                            @Html.TextBoxFor(model => model.FirstName,"", new { placeholder = "First Name", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.FirstName)
                        </div>
                        <div class="form-group col-sm-6">
                            @Html.TextBoxFor(model => model.LastName,"",new { placeholder = "Last Name", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.LastName)
                        </div>
                    </div>
                </div>
            </div>



        <div class="form-group">
            <label for="EmailAddress" class="col-sm-4 control-label"><span class="text-danger">*</span>Email</label>

            <div class="col-sm-8">
                @Html.TextBoxFor(model => model.EmailAddress, "", new { placeholder = "Primary Email will be your login Username", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EmailAddress)
            </div>
        </div>
        <div class="form-group">
            <label for="Password" class="col-sm-4 control-label"><span class="text-danger">*</span>Password</label>

            <div class="col-sm-8">
                @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Password)
                <p class="help-block">
                    Your password must be between 8 to 30 characters and must contain at least one upper case letter, at least one digit and at least one special character, with the exception of the characters < and &, which cannot be used.
                </p>
            </div>
        </div>
        <div class="form-group">
            <label for="ConfirmPassword" class="col-sm-4 control-label"><span class="text-danger">*</span>Confirm Password</label>

            <div class="col-sm-8">
                @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ConfirmPassword)
            </div>
        </div>


        <div class="form-group">
            <label for="Phone" class="col-sm-4 control-label"><span class="text-danger">*</span>Phone</label>

            <div class="col-sm-8">
                @Html.TextBoxFor(model => model.Phone, "", new { placeholder = "e.g., 202-555-1234 x1234", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Phone)
            </div>
        </div>


            <div class="form-group">
               <div class="col-sm-4 control-label">
                <label for="City"><span class="text-danger">*</span>City</label>
                <label for="State">/State</label>
                </div>
                <div class="col-sm-8">
                    <div class="form-inline row">
                        <div class="form-group col-sm-6">
                            @Html.TextBoxFor(model => model.City, "", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.City)
                        </div>
                        <div class="form-group col-sm-6">
                            @Html.DropDownListFor(model => model.State, UmbracoShipTac.Code.UiEnum.GetStates(), "Please select a State", new { @class = "form-control" })


                        </div>
                    </div>
                </div>
            </div>


        <div class="form-group">
            <label for="Organization" class="col-sm-4 control-label"><span class="text-danger">*</span>Organization</label>

            <div class="col-sm-8">
                @Html.TextBoxFor(model => model.Organization, "", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Organization)
            </div>
        </div>
            <div class="form-group">

                <label for="Reason" class="col-sm-4 control-label"><span class="text-danger">*</span>Reason for this request</label>

                <div class="col-sm-8">
                    @Html.TextAreaFor(model => model.Reason, 4, 50, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Reason)
                </div>
            </div>
        <div class="form-group">
            <div class="col-sm-8 col-sm-offset-4">
                <div class="g-recaptcha" data-sitekey="6LeoEwETAAAAANQAY8jHMY1aHUC8hHEe551zZcpw"></div>

                @*prod site
                <div class="g-recaptcha" data-sitekey="6Le1swYTAAAAAPOVhTzVqB0qkij93utNwRvaPHUe"></div>*@

            </div>
        </div>

        <div class="form-group">
            <div class="col-sm-8 col-sm-offset-4">
                <button type="submit" class="btn blue-line md btn-block">Register</button>
            </div>
        </div>

</fieldset>
    }





